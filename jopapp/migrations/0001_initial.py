# Generated by Django 3.2.22 on 2023-11-09 10:59

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import jopapp.models
import phonenumber_field.modelfields
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('country_regions', '0001_initial'),
        ('sessions', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Jobs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='اسم المجال')),
                ('type', models.CharField(blank=True, max_length=100, verbose_name='نوع المجال')),
                ('description', tinymce.models.HTMLField(null=True, verbose_name='الوصف')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='تاريخ الأنشاء ')),
                ('Date_Added', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الأضافة')),
                ('Date_Update', models.DateTimeField(auto_now=True, verbose_name='تاريخ التعديل')),
                ('edite_at', models.DateTimeField(auto_now=True, null=True, verbose_name='تاريخ التعديل ')),
                ('task', tinymce.models.HTMLField(null=True, verbose_name='مهام الوظيفة')),
                ('conditions', tinymce.models.HTMLField(null=True, verbose_name='شروط الوظيفة')),
            ],
            options={
                'verbose_name': ' الوظيفة  ',
                'verbose_name_plural': 'الوظائف  ',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='loginModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='البريد الإلكتروني')),
                ('password', models.CharField(max_length=200, verbose_name='كلمة السر')),
                ('confirmpassword', models.CharField(max_length=200, verbose_name='تأكيد كلمة السر')),
                ('re_member_me', models.BooleanField(default=True, verbose_name='تذكرني')),
                ('right_privecy', models.BooleanField(default=True, verbose_name='الموافقة على سياسة الخصوصية')),
            ],
        ),
        migrations.CreateModel(
            name='Register',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=100, null=True, verbose_name='اسم المستخدم')),
                ('full_name', models.CharField(max_length=500, verbose_name='الاسم الكامل')),
                ('email', models.EmailField(max_length=254, verbose_name='البريد الإلكتروني')),
                ('password', models.CharField(max_length=200, verbose_name='كلمة السر')),
                ('confirmpassword', models.CharField(max_length=200, verbose_name='تأكيد كلمة السر')),
                ('gender', models.CharField(choices=[('ذكر', 'ذكر'), ('أنثى', 'أنثى')], default='ather', max_length=10, verbose_name='الجنس')),
                ('city', models.CharField(max_length=200, verbose_name='المدينة')),
                ('address', models.CharField(max_length=200, verbose_name='العنوان')),
                ('village', models.CharField(blank=True, max_length=200, null=True, verbose_name='القرية/الحي')),
                ('idnumber', models.IntegerField(verbose_name='رقم البطاقة')),
                ('Release_date', models.CharField(max_length=200, verbose_name='تاريخ الإصدار')),
                ('place_issue', models.CharField(max_length=200, verbose_name='مكان الإصدار')),
                ('date_birth', models.CharField(max_length=200, verbose_name='تاريخ الميلاد')),
                ('place_birth', models.CharField(max_length=200, verbose_name='محل الميلاد')),
                ('marital_status', models.CharField(choices=[('عازب', 'عازب'), ('متزوج', 'متزوج'), ('مطلق', 'مطلق')], max_length=200, verbose_name='الحالة الاجتماعية')),
                ('number_childer', models.IntegerField(blank=True, null=True, verbose_name='عدد من تعولهم')),
                ('current_address', models.CharField(max_length=200, verbose_name='العنوان الحالي')),
                ('permanent_address', models.CharField(max_length=300, verbose_name='عنوان السكن الدائم')),
                ('mobile_number', models.IntegerField(verbose_name='رقم الموبايل')),
                ('number_whatsapp', models.CharField(blank=True, max_length=200, null=True, verbose_name='رقم الواتساب')),
                ('link_facebook', models.URLField(blank=True, max_length=400, null=True, verbose_name='صفحتك على الفيسبوك')),
                ('link_twiter', models.URLField(blank=True, max_length=400, null=True, verbose_name='صفحتك على منصة x تويتر سابقاً')),
                ('link_instigrem', models.URLField(blank=True, max_length=500, null=True, verbose_name='صفحتك على الإنستجرام')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('cv_uploaded_file', models.FileField(help_text=' نوع الملف pdf او png او jpg او doc او docx فقط والحجم لا يزيد 10 ميجا  ', upload_to='Image/cv/%Y/%m/%d/%H/%M/%S', validators=[jopapp.models.file_size, jopapp.models.validate_file_extension], verbose_name='ملف السيرة الذاتية / pdf or png or jpg or doc or docx  ')),
                ('governorate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='country_regions.region', verbose_name='المحافظة')),
                ('session', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sessions.session', verbose_name='الجلسة')),
            ],
            options={
                'verbose_name': ' الحسابات  ',
                'verbose_name_plural': ' الحسابات  ',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TrainingCourses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_institute', models.CharField(max_length=100, verbose_name='اسم المؤسسة التعليمية')),
                ('name_courses', models.CharField(max_length=100, verbose_name='اسم الدورة التعليمية')),
                ('From_Date', models.DateField(verbose_name='تاريخ البداية')),
                ('To_date', models.DateField(verbose_name='تاريخ الانتهاء')),
                ('create_at', models.DateField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='country_regions.country', verbose_name='البلد')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='TrainingCoursesRegister', to='jopapp.register', verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': ' الدورات التدربية ',
                'verbose_name_plural': 'الدورات التدريبية ',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SignUpValidete',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.BigIntegerField()),
                ('email', models.EmailField(max_length=254)),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('quality_score', models.FloatField()),
                ('is_valid_format', models.BooleanField(blank=True, null=True)),
                ('is_free_email', models.BooleanField(blank=True, null=True)),
                ('is_disposable_email', models.BooleanField(blank=True, null=True)),
                ('is_role_email', models.BooleanField(blank=True, null=True)),
                ('is_catchall_email', models.BooleanField(blank=True, null=True)),
                ('is_mx_found', models.BooleanField(blank=True, null=True)),
                ('is_smtp_valid', models.BooleanField(blank=True, null=True)),
                ('create_at', models.DateField(auto_now_add=True, verbose_name='تاريخ الإنشاء:')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='SignUpValideteRegister', to='jopapp.register', verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': ' التحقق من الايميل  ',
                'verbose_name_plural': ' التحقق من الايميل  ',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SerchJobsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('search', models.CharField(blank=True, help_text='عنوان الوظيفة  او التخصص او اسم المقدم للوظيفة', max_length=64, null=True, verbose_name='ابحث هنا')),
                ('specialization', models.CharField(blank=True, choices=[('Architectural Management', 'Architectural Management'), ('Advertising Management', 'Advertising Management'), ('Asset Management', 'Asset Management'), ('Audit Management', 'Audit Management'), ('Aviation Management', 'Aviation Management'), ('Agriculture Management', 'Agriculture Management'), ('Air Transport Management', 'Air Transport Management'), ('Banking Management', 'Banking Management'), ('BPO Management', 'BPO Management'), ('Business Marketing', 'Business Marketing'), ('Business Administration', 'Business Administration'), ('Bio-Technology Management', 'Bio-Technology Management'), ('Corporate Social Responsibility', 'Corporate Social Responsibility'), ('Customer Relationship Management', 'Customer Relationship Management'), ('Customer Care Management', 'Customer Care Management'), ('Call center Management', 'Call center Management'), ('Clinical Pharmacology', 'Clinical Pharmacology'), ('Clinical Research', 'Clinical Research'), ('Co-operative Management', 'Co-operative Management'), ('Cost and Management Accounting', 'Cost and Management Accounting'), ('Corporate and Finance Management', 'Corporate and Finance Management'), ('Consumer Management', 'Consumer Management'), ('Corporate Law', 'Corporate Law'), ('Corporate Training', 'Corporate Training'), ('Cyber Law Management', 'Cyber Law Management'), ('Civil Management', 'Civil Management'), ('Communication Management', 'Communication Management'), ('Construction Management', 'Construction Management'), ('Chartered Finance Management', 'Chartered Finance Management'), ('Data Management', 'Data Management'), ('Dairy Management', 'Dairy Management'), ('Equity Research Management', 'Equity Research Management'), ('Equality Research Management', 'Equality Research Management'), ('Export Management', 'Export Management'), ('Entrepreneurship Management', 'Entrepreneurship Management'), ('E-Business System ', 'E-Business System'), ('E-commerce', 'E-commerce'), ('Environmental Management', 'Environmental Management'), ('Event Management', 'Event Management'), ('Entrepreneur Management', 'Entrepreneur Management'), ('Energy Management', 'Energy Management'), ('Foreign Exchange Management', 'Foreign Exchange Management'), ('Finance Management', 'Finance Management'), ('Foreign Trade ', 'Foreign Trade'), ('Family Business Management', 'Family Business Management'), ('General Management', 'General Management'), ('Hospital Administration', 'Hospital Administration'), ('Health Care Management', 'Health Care Management'), ('Holistic Management', 'Holistic Management'), ('Hospital Management', 'Hospital Management'), ('Hotel Management', 'Hotel Management'), ('Hospitality Management', 'Hospitality Management'), ('Hardware Management', 'Hardware Management'), ('Human Resource Management', 'Human Resource Management'), ('Interior Management', 'Interior Management'), ('Information Management', 'Information Management'), ('Investment Analysis Management', 'Investment Analysis Management'), ('Investment Management', 'Investment Management'), ('International Finance Management', 'International Finance Management'), ('International Management', 'International Management'), ('International Trade', 'International Trade'), ('Industrial Marketing', 'Industrial Marketing'), ('International Marketing', 'International Marketing'), ('Information Technology', 'Information Technology'), ('Infrastructure Management', 'Infrastructure Management'), ('Industrial Management', 'Industrial Management'), ('Intellectual Property Rights', 'Intellectual Property Rights'), ('Logistics Management', 'Logistics Management'), ('Labour Law Management', 'Labour Law Management'), ('Library Management', 'Library Management'), ('Mass Communication', 'Mass Communication'), ('Media Management', 'Media Management'), ('Marketing Management', 'Marketing Management'), ('Mutual Fund Management', 'Mutual Fund Management'), ('Marketing Research', 'Marketing Research'), ('Market Risk Management', 'Market Risk Management'), ('Material Management', 'Material Management'), ('Marketing Finance Management', 'Marketing Finance Management'), ('Management Control Systems', 'Management Control Systems'), ('Maintenance Management', 'Maintenance Management'), ('Networking Management', 'Networking Management'), ('Operation Management', 'Operation Management'), ('Petroleum Management', 'Petroleum Management'), ('Production Management', 'Production Management'), ('Project Management', 'Project Management'), ('Packaging Management', 'Packaging Management'), ('Purchasing Management', 'Purchasing Management'), ('Personal Management', 'Personal Management'), ('Public Administration', 'Public Administration'), ('Purchase Management', 'Purchase Management'), ('Portfolio Management', 'Portfolio Management'), ('Public Relationship Management', 'Public Relationship Management'), ('Product Management', 'Product Management'), ('Personal Finance Management', 'Personal Finance Management'), ('Pharmacology Management', 'Pharmacology Management'), ('Pathology Lab Management', 'Pathology Lab Management'), ('Risk and Insurance Management', 'Risk and Insurance Management'), ('Retail Management', 'Retail Management'), ('Rural Marketing', 'Rural Marketing'), ('Rural Management', 'Rural Management'), ('Risk Management', 'Risk Management'), ('Stock Management', 'Stock Management'), ('Sales Management', 'Sales Management'), ('Sevices Marketing', 'Sevices Marketing'), ('Social Media Marketing', 'Social Media Marketing'), ('Supply chain Management', 'Supply chain Management'), ('Software Project Management', 'Software Project Management'), ('SAP Consultancy Management', 'SAP Consultancy Management'), ('Software Management', 'Software Management'), ('School Management', 'School Management'), ('Shipping Management', 'Shipping Management'), ('Safety Management', 'Safety Management'), ('Telecom Management', 'Telecom Management'), ('Taxation Management', 'Taxation Management'), ('Takeover and Acquisition Management', 'Takeover and Acquisition Management'), ('Treasury Management', 'Treasury Management'), ('Travel and Tourism Management', 'Travel and Tourism Management'), ('Transport Management', 'Transport Management'), ('Total Quality Management', 'Total Quality Management'), ('Total Safety Management', 'Total Safety Management'), ('Total Quality Management', 'Total Quality Management'), ('Ware House Management', 'Ware House Management'), ('othar', 'تخصص أخر')], max_length=100, verbose_name='التخصص:')),
                ('gender', models.CharField(blank=True, choices=[('ذكر', 'ذكر'), ('أنثى', 'أنثى')], max_length=20, null=True, verbose_name='الجنس')),
                ('all_data', models.BooleanField(default=False, verbose_name='بيانات  شبه مكتملة')),
                ('job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='jopapp.jobs', verbose_name='الوظيفة')),
            ],
        ),
        migrations.CreateModel(
            name='RequestToOpenAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_whatsapp', models.CharField(blank=True, max_length=20, null=True, verbose_name='رقم تلفون الواتساب')),
                ('Phone_Number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, null=True, region=None, verbose_name='رقم التلفون ')),
                ('emile', models.EmailField(blank=True, max_length=254, null=True, verbose_name='  البريد الألكتروني')),
                ('cookie', models.TextField(blank=True, default=' ', null=True)),
                ('note', models.TextField(blank=True, null=True, verbose_name='ادخل ملاحظة')),
                ('Date_Update', models.DateTimeField(auto_now=True, verbose_name='تاريخ التعديل ')),
                ('Date_Added', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الأضافة ')),
                ('gender', models.CharField(choices=[('ذكر', 'ذكر'), ('أنثى', 'أنثى')], default='ather', max_length=10, verbose_name='الجنس')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='country_regions.country', verbose_name='الدولة')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='jopapp.register', verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'طلب فتح حساب - بيانات عامة',
                'verbose_name_plural': 'طلب فتح حساب - بيانات عامة',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='oreder_Jobs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oreder_message', models.TextField(help_text='يجب أن لا تقل رسالة طلب العمل عن 1250 حرف ', verbose_name='رسالة الطلب')),
                ('how_to_now_job', models.CharField(choices=[('عن طريق موظف لديكم', 'عن طريق موظف لديكم'), ('الاعلان بفروع المصرف', 'الاعلان بفروع المصرف'), ('الاعلان عبر الموقع', 'الاعلان عبر الموقع'), ('صفحة توظيف بالفيس بوك', 'صفحة توظيف بالفيس بوك'), ('عن طريق ملصق اعلاني', 'عن طريق ملصق اعلاني'), ('مكتب توظيف', 'مكتب توظيف'), ('اخرى', 'اخرى')], max_length=300, verbose_name='كيف عرفت عنا')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='تاريخ الأنشاء ')),
                ('Date_Added', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الأضافة')),
                ('Date_Update', models.DateTimeField(auto_now=True, verbose_name='تاريخ التعديل')),
                ('edite_at', models.DateTimeField(auto_now=True, null=True, verbose_name='تاريخ التعديل ')),
                ('job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='jopapp.jobs', verbose_name='الوظيفة')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='oreder_Jobs_user', to='jopapp.register', verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': ' طلب تقديم للوظيفة  ',
                'verbose_name_plural': ' طلبات التقديم للوظائف  ',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='LanguageSkill',
            fields=[
                ('id', models.IntegerField(auto_created=True, primary_key=True, serialize=False)),
                ('name_language', models.CharField(choices=[('Abkhaz', 'Abkhaz'), ('Afrikaans', 'Afrikaans'), ('Albanian', 'Albanian'), ('Amharic', 'Amharic'), ('Arabic', 'Arabic'), ('Assamese', 'Assamese'), ('Basque', 'Basque'), ('Belarusian', 'Belarusian'), ('Bengali', 'Bengali'), ('Berber', 'Berber'), ('Bhojpuri', 'Bhojpuri'), ('Bosnian', 'Bosnian'), ('Bulgarian', 'Bulgarian'), ('Cantonese Chinese', 'Cantonese Chinese'), ('Catalan', 'Catalan'), ('Chinese', 'Chinese'), ('Croatian', 'Croatian'), ('Czech', 'Czech'), ('Danish', 'Danish'), ('Dutch', 'Dutch'), ('English', 'English'), ('Estonian', 'Estonian'), ('Faroese', 'Faroese'), ('Fijian', 'Fijian'), ('Finnish', 'Finnish'), ('French', 'French'), ('Frisian', 'Frisian'), ('Filipino', 'Filipino'), ('Fula', 'Fula'), ('Gaelic', 'Gaelic'), ('Gan', 'Gan'), ('Georgian', 'Georgian'), ('German', 'German'), ('Greek', 'Greek'), ('Gujarati', 'Gujarati'), ('Haitian Creole', 'Haitian Creole'), ('Hakka', 'Hakka'), ('Hausa', 'Hausa'), ('Hawaiian', 'Hawaiian'), ('Hebrew', 'Hebrew'), ('Hindi', 'Hindi'), ('Hmong', 'Hmong'), ('Hungarian', 'Hungarian'), ('Ibibio', 'Ibibio'), ('Icelandic', 'Icelandic'), ('Igbo', 'Igbo'), ('Inuinnaqtun', 'Inuinnaqtun'), ('Inuktitut', 'Inuktitut'), ('Irish', 'Irish'), ('Italian', 'Italian'), ('Japanese', 'Japanese'), ('Javanese', 'Javanese'), ('Kannada', 'Kannada'), ('Kashmiri', 'Kashmiri'), ('Khmer', 'Khmer'), ('Kazakh', 'Kazakh'), ('Korean', 'Korean'), ('Kurdish', 'Kurdish'), ('Kyrgyz', 'Kyrgyz'), ('Lao', 'Lao'), ('Lugandan', 'Lugandan'), ('Malagasy', 'Malagasy'), ('Malay (or Maysian)', 'Malay (or Maysian)'), ('Moldovian', 'Moldovian'), ('Oriya', 'Oriya'), ('Russian', 'Russian'), ('Romanian', 'Romanian'), ('Somali', 'Somali'), ('Spanish', 'Spanish'), ('Slovene', 'Slovene'), ('Slovak', 'Slovak'), ('Turkish', 'Turkish'), ('Ukrainian', 'Ukrainian'), ('Xiang', 'Xiang'), ('Vietnamese', 'Vietnamese'), ('Xhosa', 'Xhosa'), ('Zhuang', 'Zhuang'), ('othar', 'لغة أخرى')], max_length=100, verbose_name='اللغة')),
                ('otharـname_language', models.CharField(blank=True, help_text='يتم تعبئة هذا الحقل في حال لم يتوفر اللغة في القائمة السابقة', max_length=100, null=True, verbose_name='اللغة أخر :')),
                ('reading', models.CharField(choices=[('ممتاز', 'ممتاز'), ('جيد جدا', 'جيد جدا'), ('جيد', 'جيد'), ('ضعيف', 'ضعيف')], max_length=100, verbose_name='مهارة القراءة')),
                ('writing', models.CharField(choices=[('ممتاز', 'ممتاز'), ('جيد جدا', 'جيد جدا'), ('جيد', 'جيد'), ('ضعيف', 'ضعيف')], max_length=100, verbose_name='مهارة الكتابة')),
                ('conversation', models.CharField(choices=[('ممتاز', 'ممتاز'), ('جيد جدا', 'جيد جدا'), ('جيد', 'جيد'), ('ضعيف', 'ضعيف')], max_length=100, verbose_name='مهارة الحديث')),
                ('create_at', models.DateField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='LanguageSkillRegister', to='jopapp.register', verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'مهاراة اللغة ',
                'verbose_name_plural': 'مهارات اللغة ',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='IdentificationCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cookie', models.TextField(blank=True, default=' ', max_length=10000000, null=True)),
                ('full_name', models.CharField(max_length=250, null=True, verbose_name='الاسم الرباعي حسب البطاقة الشخصية')),
                ('id_number', models.PositiveBigIntegerField(null=True, verbose_name='رقم الهوية الشخصية')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='تاريخ الميلاد')),
                ('id_issuance_date', models.DateField(blank=True, null=True, verbose_name='تاريخ اصدار الهوية')),
                ('id_expiry_date', models.DateField(blank=True, null=True, verbose_name='تاريخ انتهاء الهوية')),
                ('image_front', models.ImageField(max_length=250, null=True, upload_to='Image/IdentificationCard/%Y/%m/%d/%H/%M/%S', verbose_name='صورة البطاقة الآمامية')),
                ('image_back', models.ImageField(max_length=250, null=True, upload_to='Image/IdentificationCard/%Y/%m/%d/%H/%M/%S', verbose_name='صورة البطاقة الخلفية')),
                ('gender', models.CharField(choices=[('ذكر', 'ذكر'), ('أنثى', 'أنثى')], max_length=20, null=True, verbose_name='الجنس')),
                ('nationality_amrican', models.BooleanField(choices=[(False, 'لا'), (True, 'نعم')], default=False, help_text='هل لديك الجنسية الامريكية', serialize=False, verbose_name='هل لديك الجنسية الامريكية')),
                ('have_nationality', models.BooleanField(choices=[(False, 'لا'), (True, 'نعم')], verbose_name='هل لديك جنسية اخرى ؟')),
                ('nationality', models.CharField(max_length=200, null=True, verbose_name='الجنسية')),
                ('nationality_othar', models.CharField(blank=True, max_length=200, null=True, verbose_name='جنسية اخرى')),
                ('maritalـstatus', models.CharField(choices=[('bachelor', 'اعزب'), ('married', 'متزوج'), ('divorced', 'مطلق'), ('widow', 'ارمل')], max_length=20, null=True, verbose_name='الحالة الاجتماعية')),
                ('educational_level', models.CharField(choices=[('primary', 'ابتدئي'), ('general secondary', 'ثنوية عامة'), ('diploma', 'دبلوم'), ('higher_diploma', 'دبلوم عالي'), ('bachelor', 'بكالوريوس'), ('master', 'ماجستير'), ('doctor', 'دكتورة')], max_length=20, null=True, verbose_name='المستوى التعلمي')),
                ('specialization', models.CharField(choices=[('Architectural Management', 'Architectural Management'), ('Advertising Management', 'Advertising Management'), ('Asset Management', 'Asset Management'), ('Audit Management', 'Audit Management'), ('Aviation Management', 'Aviation Management'), ('Agriculture Management', 'Agriculture Management'), ('Air Transport Management', 'Air Transport Management'), ('Banking Management', 'Banking Management'), ('BPO Management', 'BPO Management'), ('Business Marketing', 'Business Marketing'), ('Business Administration', 'Business Administration'), ('Bio-Technology Management', 'Bio-Technology Management'), ('Corporate Social Responsibility', 'Corporate Social Responsibility'), ('Customer Relationship Management', 'Customer Relationship Management'), ('Customer Care Management', 'Customer Care Management'), ('Call center Management', 'Call center Management'), ('Clinical Pharmacology', 'Clinical Pharmacology'), ('Clinical Research', 'Clinical Research'), ('Co-operative Management', 'Co-operative Management'), ('Cost and Management Accounting', 'Cost and Management Accounting'), ('Corporate and Finance Management', 'Corporate and Finance Management'), ('Consumer Management', 'Consumer Management'), ('Corporate Law', 'Corporate Law'), ('Corporate Training', 'Corporate Training'), ('Cyber Law Management', 'Cyber Law Management'), ('Civil Management', 'Civil Management'), ('Communication Management', 'Communication Management'), ('Construction Management', 'Construction Management'), ('Chartered Finance Management', 'Chartered Finance Management'), ('Data Management', 'Data Management'), ('Dairy Management', 'Dairy Management'), ('Equity Research Management', 'Equity Research Management'), ('Equality Research Management', 'Equality Research Management'), ('Export Management', 'Export Management'), ('Entrepreneurship Management', 'Entrepreneurship Management'), ('E-Business System ', 'E-Business System'), ('E-commerce', 'E-commerce'), ('Environmental Management', 'Environmental Management'), ('Event Management', 'Event Management'), ('Entrepreneur Management', 'Entrepreneur Management'), ('Energy Management', 'Energy Management'), ('Foreign Exchange Management', 'Foreign Exchange Management'), ('Finance Management', 'Finance Management'), ('Foreign Trade ', 'Foreign Trade'), ('Family Business Management', 'Family Business Management'), ('General Management', 'General Management'), ('Hospital Administration', 'Hospital Administration'), ('Health Care Management', 'Health Care Management'), ('Holistic Management', 'Holistic Management'), ('Hospital Management', 'Hospital Management'), ('Hotel Management', 'Hotel Management'), ('Hospitality Management', 'Hospitality Management'), ('Hardware Management', 'Hardware Management'), ('Human Resource Management', 'Human Resource Management'), ('Interior Management', 'Interior Management'), ('Information Management', 'Information Management'), ('Investment Analysis Management', 'Investment Analysis Management'), ('Investment Management', 'Investment Management'), ('International Finance Management', 'International Finance Management'), ('International Management', 'International Management'), ('International Trade', 'International Trade'), ('Industrial Marketing', 'Industrial Marketing'), ('International Marketing', 'International Marketing'), ('Information Technology', 'Information Technology'), ('Infrastructure Management', 'Infrastructure Management'), ('Industrial Management', 'Industrial Management'), ('Intellectual Property Rights', 'Intellectual Property Rights'), ('Logistics Management', 'Logistics Management'), ('Labour Law Management', 'Labour Law Management'), ('Library Management', 'Library Management'), ('Mass Communication', 'Mass Communication'), ('Media Management', 'Media Management'), ('Marketing Management', 'Marketing Management'), ('Mutual Fund Management', 'Mutual Fund Management'), ('Marketing Research', 'Marketing Research'), ('Market Risk Management', 'Market Risk Management'), ('Material Management', 'Material Management'), ('Marketing Finance Management', 'Marketing Finance Management'), ('Management Control Systems', 'Management Control Systems'), ('Maintenance Management', 'Maintenance Management'), ('Networking Management', 'Networking Management'), ('Operation Management', 'Operation Management'), ('Petroleum Management', 'Petroleum Management'), ('Production Management', 'Production Management'), ('Project Management', 'Project Management'), ('Packaging Management', 'Packaging Management'), ('Purchasing Management', 'Purchasing Management'), ('Personal Management', 'Personal Management'), ('Public Administration', 'Public Administration'), ('Purchase Management', 'Purchase Management'), ('Portfolio Management', 'Portfolio Management'), ('Public Relationship Management', 'Public Relationship Management'), ('Product Management', 'Product Management'), ('Personal Finance Management', 'Personal Finance Management'), ('Pharmacology Management', 'Pharmacology Management'), ('Pathology Lab Management', 'Pathology Lab Management'), ('Risk and Insurance Management', 'Risk and Insurance Management'), ('Retail Management', 'Retail Management'), ('Rural Marketing', 'Rural Marketing'), ('Rural Management', 'Rural Management'), ('Risk Management', 'Risk Management'), ('Stock Management', 'Stock Management'), ('Sales Management', 'Sales Management'), ('Sevices Marketing', 'Sevices Marketing'), ('Social Media Marketing', 'Social Media Marketing'), ('Supply chain Management', 'Supply chain Management'), ('Software Project Management', 'Software Project Management'), ('SAP Consultancy Management', 'SAP Consultancy Management'), ('Software Management', 'Software Management'), ('School Management', 'School Management'), ('Shipping Management', 'Shipping Management'), ('Safety Management', 'Safety Management'), ('Telecom Management', 'Telecom Management'), ('Taxation Management', 'Taxation Management'), ('Takeover and Acquisition Management', 'Takeover and Acquisition Management'), ('Treasury Management', 'Treasury Management'), ('Travel and Tourism Management', 'Travel and Tourism Management'), ('Transport Management', 'Transport Management'), ('Total Quality Management', 'Total Quality Management'), ('Total Safety Management', 'Total Safety Management'), ('Total Quality Management', 'Total Quality Management'), ('Ware House Management', 'Ware House Management'), ('othar', 'تخصص أخر')], max_length=100, null=True, verbose_name='التخصص')),
                ('othar_specialization', models.CharField(blank=True, help_text='يتم تعبئة هذا الحقل في حال لم يتوفر التخصص في القائمة السابقة', max_length=100, null=True, verbose_name='تخصص أخر :')),
                ('name_language', models.CharField(choices=[('Abkhaz', 'Abkhaz'), ('Afrikaans', 'Afrikaans'), ('Albanian', 'Albanian'), ('Amharic', 'Amharic'), ('Arabic', 'Arabic'), ('Assamese', 'Assamese'), ('Basque', 'Basque'), ('Belarusian', 'Belarusian'), ('Bengali', 'Bengali'), ('Berber', 'Berber'), ('Bhojpuri', 'Bhojpuri'), ('Bosnian', 'Bosnian'), ('Bulgarian', 'Bulgarian'), ('Cantonese Chinese', 'Cantonese Chinese'), ('Catalan', 'Catalan'), ('Chinese', 'Chinese'), ('Croatian', 'Croatian'), ('Czech', 'Czech'), ('Danish', 'Danish'), ('Dutch', 'Dutch'), ('English', 'English'), ('Estonian', 'Estonian'), ('Faroese', 'Faroese'), ('Fijian', 'Fijian'), ('Finnish', 'Finnish'), ('French', 'French'), ('Frisian', 'Frisian'), ('Filipino', 'Filipino'), ('Fula', 'Fula'), ('Gaelic', 'Gaelic'), ('Gan', 'Gan'), ('Georgian', 'Georgian'), ('German', 'German'), ('Greek', 'Greek'), ('Gujarati', 'Gujarati'), ('Haitian Creole', 'Haitian Creole'), ('Hakka', 'Hakka'), ('Hausa', 'Hausa'), ('Hawaiian', 'Hawaiian'), ('Hebrew', 'Hebrew'), ('Hindi', 'Hindi'), ('Hmong', 'Hmong'), ('Hungarian', 'Hungarian'), ('Ibibio', 'Ibibio'), ('Icelandic', 'Icelandic'), ('Igbo', 'Igbo'), ('Inuinnaqtun', 'Inuinnaqtun'), ('Inuktitut', 'Inuktitut'), ('Irish', 'Irish'), ('Italian', 'Italian'), ('Japanese', 'Japanese'), ('Javanese', 'Javanese'), ('Kannada', 'Kannada'), ('Kashmiri', 'Kashmiri'), ('Khmer', 'Khmer'), ('Kazakh', 'Kazakh'), ('Korean', 'Korean'), ('Kurdish', 'Kurdish'), ('Kyrgyz', 'Kyrgyz'), ('Lao', 'Lao'), ('Lugandan', 'Lugandan'), ('Malagasy', 'Malagasy'), ('Malay (or Maysian)', 'Malay (or Maysian)'), ('Moldovian', 'Moldovian'), ('Oriya', 'Oriya'), ('Russian', 'Russian'), ('Romanian', 'Romanian'), ('Somali', 'Somali'), ('Spanish', 'Spanish'), ('Slovene', 'Slovene'), ('Slovak', 'Slovak'), ('Turkish', 'Turkish'), ('Ukrainian', 'Ukrainian'), ('Xiang', 'Xiang'), ('Vietnamese', 'Vietnamese'), ('Xhosa', 'Xhosa'), ('Zhuang', 'Zhuang'), ('othar', 'لغة أخرى')], max_length=100, verbose_name='اللغة')),
                ('otharـname_language', models.CharField(blank=True, help_text='يتم تعبئة هذا الحقل في حال لم يتوفر اللغة في القائمة السابقة', max_length=100, null=True, verbose_name='اللغة أخر :')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='jopapp.register', verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'طلب فتح حساب - بيانات البطاقة الشخصية ',
                'verbose_name_plural': 'طلب فتح حساب - بيانات البطاقة الشخصية ',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='GeneralData',
            fields=[
                ('id', models.IntegerField(auto_created=True, primary_key=True, serialize=False)),
                ('work_bank', models.CharField(choices=[('نعم', 'نعم'), ('لا', 'لا')], default='لا', max_length=5, verbose_name='هل تعمل في البنك')),
                ('receive_email', models.CharField(max_length=100, verbose_name='هل تريد استقبال بريد إلكتروني من البنك ')),
                ('file_civil_service', models.CharField(choices=[('نعم', 'نعم'), ('لا', 'لا')], default='لا', max_length=5, verbose_name='هل لديك ملف في الخدمة المدنية')),
                ('spend_working', models.CharField(max_length=100, verbose_name='كيفية إنفاق راتبك')),
                ('purchasing_visa', models.CharField(choices=[('نعم', 'نعم'), ('لا', 'لا')], default='لا', max_length=5, verbose_name='هل تمتلك تأشيرة للسفر')),
                ('traveling', models.CharField(choices=[('نعم', 'نعم'), ('لا', 'لا')], default='لا', max_length=3, verbose_name='هل تسافر')),
                ('currently_working', models.CharField(max_length=250, verbose_name='هل تعمل حاليًا')),
                ('Current_working_phone', models.IntegerField(verbose_name='رقم هاتف جهة العمل الحالية')),
                ('Current_work_address', models.CharField(max_length=250, verbose_name='عنوان جهة العمل الحالية')),
                ('currently_studying', models.CharField(choices=[('نعم', 'نعم'), ('لا', 'لا')], default='لا', max_length=3, verbose_name='هل تدرس حاليًا')),
                ('work_night', models.CharField(choices=[('نعم', 'نعم'), ('لا', 'لا')], default='نعم', max_length=3, verbose_name='هل تعمل ليلاً')),
                ('start_working', models.CharField(max_length=250, verbose_name='تاريخ بدء العمل')),
                ('lowest_salary', models.IntegerField(blank=True, null=True, verbose_name='أدنى راتب تقبله')),
                ('health_problems', models.CharField(blank=True, help_text='معا السبب ان توفر', max_length=250, null=True, verbose_name='مشاكل صحية')),
                ('hobbies', models.TextField(verbose_name='الهوايات')),
                ('person_closest', models.CharField(max_length=250, verbose_name='اسم أقرب شخص')),
                ('person_closest_Phone', models.CharField(max_length=250, verbose_name='رقم هاتف الشخص الأقرب')),
                ('relative_relation', models.CharField(max_length=250, verbose_name='علاقتك بالشخص الأقرب')),
                ('person_closest_address', models.CharField(max_length=250, verbose_name='عنوان الشخص الأقرب')),
                ('name_village_justice', models.CharField(max_length=250, verbose_name='اسم قريتك أو مدينتك')),
                ('village_justice_Telephon', models.IntegerField(verbose_name='رقم هاتف قائمة العدالة بقريتك أو مدينتك')),
                ('village_justice_address', models.CharField(max_length=250, verbose_name='عنوان قائمة العدالة بقريتك أو مدينتك')),
                ('manage_business', models.CharField(max_length=250, verbose_name='هل تدير عمل خاص')),
                ('ready_work', models.CharField(help_text='معا السبب ان توفر', max_length=250, verbose_name='هل أنت جاهز للعمل')),
                ('government_job', models.CharField(help_text='معا السبب ان توفر', max_length=250, verbose_name='هل تفضل وظيفة حكومية')),
                ('source_financial_income', models.CharField(help_text='معا السبب ان توفر', max_length=250, verbose_name='مصدر دخلك المالي')),
                ('proficient_English', models.CharField(help_text='معا السبب ان توفر', max_length=250, verbose_name='مهارة اللغة الإنجليزية')),
                ('have_illness', models.CharField(help_text='معا السبب ان توفر', max_length=250, verbose_name='هل تعاني من أمراض')),
                ('graduation_certificate', models.CharField(help_text='معا السبب ان توفر', max_length=250, verbose_name='شهادة التخرج')),
                ('graduation_certificate_file', models.FileField(blank=True, help_text=' نوع الملف pdf او png او jpg او doc او docx فقط والحجم لا يزيد 10 ميجا  ', null=True, upload_to='Image/certificate/%Y/%m/%d/%H/%M/%S', validators=[jopapp.models.validate_file_extension, jopapp.models.file_size], verbose_name='شهادة التخرج ان توفرت/ pdf or png or jpg or doc or docx  ')),
                ('create_at', models.DateField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='GeneralDataRegister', to='jopapp.register', verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': ' البيانات العامة  ',
                'verbose_name_plural': ' البيانات العامة  ',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_word', models.CharField(max_length=100, verbose_name='اسم الشركة/المؤسسة')),
                ('From_Date', models.DateField(verbose_name='تاريخ البداية')),
                ('To_date', models.DateField(verbose_name='تاريخ الانتهاء')),
                ('name_shop', models.CharField(max_length=100, verbose_name='اسم المتجر/المكان')),
                ('name_owner', models.CharField(max_length=100, verbose_name='اسم صاحب المحل')),
                ('address', models.CharField(max_length=100, verbose_name='العنوان')),
                ('mobile', models.IntegerField(verbose_name='رقم الهاتف')),
                ('task', models.TextField(max_length=100000, verbose_name='المهام')),
                ('name_job_start', models.CharField(max_length=100, verbose_name='المسمى الوظيفة (بداية)')),
                ('name_job_end', models.CharField(max_length=100, verbose_name='اسم الوظيفة (نهاية)')),
                ('salary_start', models.CharField(max_length=100, verbose_name='الراتب (بداية)')),
                ('salary_end', models.CharField(max_length=100, verbose_name='الراتب (نهاية)')),
                ('working_hours', models.CharField(max_length=100, verbose_name='ساعات العمل')),
                ('resson_leaving', models.CharField(max_length=100, verbose_name='سبب مغادرة الوظيفة')),
                ('create_at', models.DateField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ExperienceRegister', to='jopapp.register', verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'الخبرة ',
                'verbose_name_plural': 'الخبرات  ',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Employment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='اسم المجال')),
                ('create_at', models.DateField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='EmploymentRegister', to='jopapp.register', verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': ' مجال العمل  ',
                'verbose_name_plural': ' مجالات العمل  ',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.IntegerField(auto_created=True, primary_key=True, serialize=False, verbose_name='الرقم')),
                ('name_educational_institution', models.CharField(max_length=100, verbose_name='اسم المؤسسة التعليمية:')),
                ('sducation_level', models.CharField(choices=[('primary', 'ابتدئي'), ('general secondary', 'ثنوية عامة'), ('diploma', 'دبلوم'), ('higher_diploma', 'دبلوم عالي'), ('bachelor', 'بكالوريوس'), ('master', 'ماجستير'), ('doctor', 'دكتورة')], max_length=100, verbose_name='المستوى التعليمي:')),
                ('specialization', models.CharField(choices=[('Architectural Management', 'Architectural Management'), ('Advertising Management', 'Advertising Management'), ('Asset Management', 'Asset Management'), ('Audit Management', 'Audit Management'), ('Aviation Management', 'Aviation Management'), ('Agriculture Management', 'Agriculture Management'), ('Air Transport Management', 'Air Transport Management'), ('Banking Management', 'Banking Management'), ('BPO Management', 'BPO Management'), ('Business Marketing', 'Business Marketing'), ('Business Administration', 'Business Administration'), ('Bio-Technology Management', 'Bio-Technology Management'), ('Corporate Social Responsibility', 'Corporate Social Responsibility'), ('Customer Relationship Management', 'Customer Relationship Management'), ('Customer Care Management', 'Customer Care Management'), ('Call center Management', 'Call center Management'), ('Clinical Pharmacology', 'Clinical Pharmacology'), ('Clinical Research', 'Clinical Research'), ('Co-operative Management', 'Co-operative Management'), ('Cost and Management Accounting', 'Cost and Management Accounting'), ('Corporate and Finance Management', 'Corporate and Finance Management'), ('Consumer Management', 'Consumer Management'), ('Corporate Law', 'Corporate Law'), ('Corporate Training', 'Corporate Training'), ('Cyber Law Management', 'Cyber Law Management'), ('Civil Management', 'Civil Management'), ('Communication Management', 'Communication Management'), ('Construction Management', 'Construction Management'), ('Chartered Finance Management', 'Chartered Finance Management'), ('Data Management', 'Data Management'), ('Dairy Management', 'Dairy Management'), ('Equity Research Management', 'Equity Research Management'), ('Equality Research Management', 'Equality Research Management'), ('Export Management', 'Export Management'), ('Entrepreneurship Management', 'Entrepreneurship Management'), ('E-Business System ', 'E-Business System'), ('E-commerce', 'E-commerce'), ('Environmental Management', 'Environmental Management'), ('Event Management', 'Event Management'), ('Entrepreneur Management', 'Entrepreneur Management'), ('Energy Management', 'Energy Management'), ('Foreign Exchange Management', 'Foreign Exchange Management'), ('Finance Management', 'Finance Management'), ('Foreign Trade ', 'Foreign Trade'), ('Family Business Management', 'Family Business Management'), ('General Management', 'General Management'), ('Hospital Administration', 'Hospital Administration'), ('Health Care Management', 'Health Care Management'), ('Holistic Management', 'Holistic Management'), ('Hospital Management', 'Hospital Management'), ('Hotel Management', 'Hotel Management'), ('Hospitality Management', 'Hospitality Management'), ('Hardware Management', 'Hardware Management'), ('Human Resource Management', 'Human Resource Management'), ('Interior Management', 'Interior Management'), ('Information Management', 'Information Management'), ('Investment Analysis Management', 'Investment Analysis Management'), ('Investment Management', 'Investment Management'), ('International Finance Management', 'International Finance Management'), ('International Management', 'International Management'), ('International Trade', 'International Trade'), ('Industrial Marketing', 'Industrial Marketing'), ('International Marketing', 'International Marketing'), ('Information Technology', 'Information Technology'), ('Infrastructure Management', 'Infrastructure Management'), ('Industrial Management', 'Industrial Management'), ('Intellectual Property Rights', 'Intellectual Property Rights'), ('Logistics Management', 'Logistics Management'), ('Labour Law Management', 'Labour Law Management'), ('Library Management', 'Library Management'), ('Mass Communication', 'Mass Communication'), ('Media Management', 'Media Management'), ('Marketing Management', 'Marketing Management'), ('Mutual Fund Management', 'Mutual Fund Management'), ('Marketing Research', 'Marketing Research'), ('Market Risk Management', 'Market Risk Management'), ('Material Management', 'Material Management'), ('Marketing Finance Management', 'Marketing Finance Management'), ('Management Control Systems', 'Management Control Systems'), ('Maintenance Management', 'Maintenance Management'), ('Networking Management', 'Networking Management'), ('Operation Management', 'Operation Management'), ('Petroleum Management', 'Petroleum Management'), ('Production Management', 'Production Management'), ('Project Management', 'Project Management'), ('Packaging Management', 'Packaging Management'), ('Purchasing Management', 'Purchasing Management'), ('Personal Management', 'Personal Management'), ('Public Administration', 'Public Administration'), ('Purchase Management', 'Purchase Management'), ('Portfolio Management', 'Portfolio Management'), ('Public Relationship Management', 'Public Relationship Management'), ('Product Management', 'Product Management'), ('Personal Finance Management', 'Personal Finance Management'), ('Pharmacology Management', 'Pharmacology Management'), ('Pathology Lab Management', 'Pathology Lab Management'), ('Risk and Insurance Management', 'Risk and Insurance Management'), ('Retail Management', 'Retail Management'), ('Rural Marketing', 'Rural Marketing'), ('Rural Management', 'Rural Management'), ('Risk Management', 'Risk Management'), ('Stock Management', 'Stock Management'), ('Sales Management', 'Sales Management'), ('Sevices Marketing', 'Sevices Marketing'), ('Social Media Marketing', 'Social Media Marketing'), ('Supply chain Management', 'Supply chain Management'), ('Software Project Management', 'Software Project Management'), ('SAP Consultancy Management', 'SAP Consultancy Management'), ('Software Management', 'Software Management'), ('School Management', 'School Management'), ('Shipping Management', 'Shipping Management'), ('Safety Management', 'Safety Management'), ('Telecom Management', 'Telecom Management'), ('Taxation Management', 'Taxation Management'), ('Takeover and Acquisition Management', 'Takeover and Acquisition Management'), ('Treasury Management', 'Treasury Management'), ('Travel and Tourism Management', 'Travel and Tourism Management'), ('Transport Management', 'Transport Management'), ('Total Quality Management', 'Total Quality Management'), ('Total Safety Management', 'Total Safety Management'), ('Total Quality Management', 'Total Quality Management'), ('Ware House Management', 'Ware House Management'), ('othar', 'تخصص أخر')], max_length=100, verbose_name='التخصص:')),
                ('othar_specialization', models.CharField(blank=True, help_text='يتم تعبئة هذا الحقل في حال لم يتوفر التخصص في القائمة السابقة', max_length=100, null=True, verbose_name='تخصص أخر :')),
                ('rate', models.CharField(max_length=100, verbose_name='المعدل:')),
                ('From_Date', models.DateField(verbose_name='من تاريخ:')),
                ('To_date', models.DateField(verbose_name='إلى تاريخ:')),
                ('uploaded_image', models.FileField(blank=True, help_text=' نوع الملف pdf او png او jpg او doc او docx فقط والحجم لا يزيد 10 ميجا  ', null=True, upload_to='Image/certificate/%Y/%m/%d/%H/%M/%S', validators=[jopapp.models.validate_file_extension, jopapp.models.file_size], verbose_name='الشهادة/ pdf or png or jpg or doc or docx  ')),
                ('create_at', models.DateField(auto_now_add=True, verbose_name='تاريخ الإنشاء:')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='country_regions.country', verbose_name='البلد')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='EducationRegister', to='jopapp.register', verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': ' المؤهل ',
                'verbose_name_plural': 'الموهلات ',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ComputerSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='المهارة')),
                ('level', models.CharField(choices=[('ممتاز', 'ممتاز'), ('جيد جدا', 'جيد جدا'), ('جيد', 'جيد'), ('ضعيف', 'ضعيف')], max_length=100, verbose_name='مستوى المهارة')),
                ('create_at', models.DateField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ComputerSkillRegister', to='jopapp.register', verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'مهاراة الحاسوب ',
                'verbose_name_plural': 'مهارات الحاسوب ',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BirthData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cookie', models.TextField(blank=True, editable=False, max_length=10000000, null=True)),
                ('country', models.ForeignKey(help_text='اختار دولة', null=True, on_delete=django.db.models.deletion.SET_NULL, to='country_regions.country', verbose_name='الدولة')),
                ('directorate', models.ForeignKey(blank=True, help_text='اختار المديرية', null=True, on_delete=django.db.models.deletion.SET_NULL, to='country_regions.directorate', verbose_name='المديرية')),
                ('isolation', models.ForeignKey(blank=True, help_text='اختار العزلة', null=True, on_delete=django.db.models.deletion.SET_NULL, to='country_regions.isolation', verbose_name='العزلة')),
                ('region', models.ForeignKey(blank=True, help_text='اختار المحافظة', null=True, on_delete=django.db.models.deletion.SET_NULL, to='country_regions.region', verbose_name='المحافظة')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='jopapp.register', verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'طلب فتح حساب - بيانات الميلاد ',
                'verbose_name_plural': 'طلب فتح حساب - بيانات الميلاد ',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BankKonown',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='اسم الشخص')),
                ('relative', models.CharField(max_length=100, verbose_name='صلة القرابة')),
                ('working', models.CharField(max_length=100, verbose_name='جهة العمل')),
                ('address', models.CharField(max_length=100, verbose_name='العنوان')),
                ('mobile', models.IntegerField(verbose_name='رقم الهاتف')),
                ('create_at', models.DateField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='BankKonownRegister', to='jopapp.register', verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': ' المعرف  ',
                'verbose_name_plural': '  المعرفين  ',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AddressLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cookie', models.TextField(blank=True, editable=False, max_length=10000000, null=True)),
                ('street', models.CharField(blank=True, max_length=20, null=True, verbose_name='الشارع')),
                ('nearest_branch', models.CharField(blank=True, max_length=20, null=True, verbose_name='اقرب فرع لبنك الإنماء من محل اقامتك')),
                ('nearest_outstanding_landmark', models.CharField(blank=True, max_length=20, null=True, verbose_name='اقرب معلم بارز من محل اقامتك')),
                ('accommodation_type', models.CharField(blank=True, max_length=20, null=True, verbose_name='نوع السكن')),
                ('country_address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='country_regions.country', verbose_name='الدولة')),
                ('directorate_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='country_regions.directorate', verbose_name='المديرية')),
                ('isolation_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='country_regions.isolation', verbose_name='العزلة')),
                ('region_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='country_regions.region', verbose_name='المحافظة')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='jopapp.register', verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'طلب فتح حساب - بيانات العنوان ',
                'verbose_name_plural': 'طلب فتح حساب - بيانات العنوان ',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
